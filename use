#!/bin/bash

set -euo pipefail

STOW="./stow"
FILESDIR="files"
STOWARGS="-d ${FILESDIR} -t ${HOME}"
USERC=".userc"

# Build stow if it doesn't exist {{{
if [[ ! -f "${STOW}" ]]; then
	scripts/get_stow "${STOW}"
fi
# }}}

# mkunique {{{
mkunique() {
	xargs -n1 | sort -u | xargs
}
# }}}

# cmdfunc {{{
cmdfunc() {
	pth=$1
	for cmd; do
		if [[ -f "${pth}/${cmd}" ]]; then
			echo "Running ${pth}-${cmd} commands"
			(
				this_pwd="$PWD"
				cd "files/${cmd}"
				sh "${this_pwd}/${pth}/${cmd}"
			)
		fi
	done
}
# }}}

# Get all modules we want to "use" {{{
deps=()
for cmd in $(echo "$@" $(cat ${USERC} 2>/dev/null)| mkunique); do
	deps+=("${cmd}")
	if [[ -f "depends/${cmd}" ]]; then
		deps+=($(cat "depends/${cmd}"))
	fi
done
uniques=($(echo ${deps[@]}| mkunique))
# }}}

# Stow and use pre/post functions {{{
cmdfunc "pre" ${uniques[@]}
echo "Running 'stow' on: ${uniques[@]}"
${STOW} ${STOWARGS} --adopt ${uniques[@]}
${STOW} ${STOWARGS} -R ${uniques[@]}
cmdfunc "post" ${uniques[@]}
# }}}

# Save modules for later use
echo ${uniques[@]} > ${USERC}

# vim: fdm=marker
