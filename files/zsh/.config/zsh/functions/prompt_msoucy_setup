# msoucy custom theme

# git/hg info {{{
zstyle ':vcs_info:*' enable git svn hg
zstyle ':vcs_info:*' branchformat '%b'
zstyle ':vcs_info:*' formats '%s%m|%b%c%u|%0.6i'
zstyle ':vcs_info:*' get-revision true
zstyle ':vcs_info:*' stagedstr '%{%F{yellow}%G→%}'
zstyle ':vcs_info:*' unstagedstr '|%{%F{blue}%G⚡%F{green}%}'
zstyle ':vcs_info:*' check-for-changes true
# }}}

# Alternate characters {{{
typeset -A altchar
set -A altchar ${(s..)terminfo[acsc]}
PR_SET_CHARSET="%{$terminfo[enacs]%}"
PR_SHIFT_IN="%{$terminfo[smacs]%}"
PR_SHIFT_OUT="%{$terminfo[rmacs]%}"
PR_HBAR="${PR_SHIFT_IN}${altchar[q]:--}${PR_SHIFT_OUT}"
PR_ULCORNER="${PR_SHIFT_IN}${altchar[l]:--}${PR_SHIFT_OUT}"
PR_LLCORNER="${PR_SHIFT_IN}${altchar[m]:--}${PR_SHIFT_OUT}"
PR_LRCORNER="${PR_SHIFT_IN}${altchar[j]:--}${PR_SHIFT_OUT}"
PR_URCORNER="${PR_SHIFT_IN}${altchar[k]:--}${PR_SHIFT_OUT}"
PR_FORKRIGHT="${PR_SHIFT_IN}${altchar[t]:--}${PR_SHIFT_OUT}"
# }}}

# Colors {{{
for color in BLACK RED GREEN YELLOW BLUE MAGENTA CYAN WHITE; do
  eval PR_$color='%{%B%F{${(L)color}}%}'
  eval PR_LIGHT_$color='%{%b%F{${(L)color}}%}'
done
PR_NO_COLOR="%{%b%f%}"
PR_BODY_COLOR="${PR_LIGHT_CYAN}"
# }}}

# Modules {{{
typeset -gA _pr_modlist
_pr_modlist=(
  time     "${PR_WHITE}%D{%H:%M:%S}"
  userhost "${PR_RED}%n${PR_YELLOW}@%M"
  pwd      "${PR_NO_COLOR}${PR_YELLOW}%~"
  smiley   "%(?.${PR_LIGHT_GREEN}^_^${PR_NO_COLOR}.${PR_LIGHT_RED}O_O [%?])"
)
# }}}

# User settings {{{
if zstyle -t ':prompt:msoucy' modules ${(k)_pr_modlist}; then
  zstyle -s ':prompt:msoucy' modules _pr_modules
else
  _pr_modules=(userhost pwd)
fi

if zstyle -t ':prompt:msoucy' rmodules ${(k)_pr_modlist}; then
  zstyle -s ':prompt:msoucy' rmodules _pr_rmodules
else
  _pr_rmodules=(vcs venv time)
fi
# }}}

prompt_msoucy_setup() {
  vcs_info prompt

  prompt_msoucy_loop () {
    local pref="${1}"
    local suff="${2}"
    builtin shift 2
    for mod; do
      if [[ -n "${_pr_modlist[$mod]}" ]]; then
        echo -ne "${pref}${_pr_modlist[$mod]}${suff}"
      fi
    done
  }

  prompt_msoucy_module () {
    prompt_msoucy_loop "${PR_BODY_COLOR}${PR_HBAR}[" "${PR_BODY_COLOR}]" "$@"
  }

  prompt_msoucy_rmodule () {
    prompt_msoucy_loop "${PR_BODY_COLOR}[" "${PR_BODY_COLOR}]${PR_HBAR}" "$@"
  }

  PROMPT='${PR_BODY_COLOR}${PR_ULCORNER}$(prompt_msoucy_module ${_pr_modules})
${PR_BODY_COLOR}${PR_LLCORNER}${PR_BODY_COLOR}$(prompt_msoucy_module smiley)>${PR_NO_COLOR} '
  RPROMPT='$(prompt_msoucy_rmodule ${_pr_rmodules})${PR_NO_COLOR}'
  PS2='${PR_BODY_COLOR}${PR_LLCORNER}>(${PR_LIGHT_GREEN}%_${PR_BODY_COLOR})${PR_HBAR}>${PR_NO_COLOR} '
}

# precmd {{{
prompt_msoucy_precmd () {
  vcs_info prompt

  # version control info
  if [[ -n "${vcs_info_msg_0_}" ]]; then
    _pr_modlist+=(vcs  "${PR_LIGHT_GREEN}${vcs_info_msg_0_}")
  else
    _pr_modlist+=(vcs "")
  fi
  if [[ -n "$(basename "${VIRTUAL_ENV}")" ]]; then
    _pr_modlist+=(venv "${PR_LIGHT_GREEN}$(basename "${VIRTUAL_ENV}")")
  else
    _pr_modlist+=(venv "")
  fi

  # Deal with virtualenv stuff
}
add-zsh-hook precmd prompt_msoucy_precmd
# }}}

prompt_msoucy_setup "$@"

# vim: fdm=marker et ts=2 sw=2 ft=zsh
